apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "metadata-injector.fullname" . }}
  labels:
    {{- include "metadata-injector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "metadata-injector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "metadata-injector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "metadata-injector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          env:
            - name: TLS
              value: "true"
            - name: TLS_CERT_PATH
              value: "/etc/admission-webhook/tls/cert"
            - name: TLS_KEY_PATH
              value: "/etc/admission-webhook/tls/key"
            - name: LOG_LEVEL
              value: "{{ .Values.log.level }}"
            - name: LOG_JSON
              value: "{{ .Values.log.jsonFromat }}"
            - name: TRIGGER_ANNOTATION_PREFIX
              value: "{{ .Values.triggerAnnotationPrefrix }}"
          volumeMounts:
            - name: webhook-cert
              mountPath: "/etc/admission-webhook/tls"
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: webhook-cert
          secret:
            secretName: {{ include "metadata-injector.fullname" . }}-tls
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
